answer: '<p>It&rsquo;s arguably impossible for Tumblr to keep someone from overriding
  their CSS, in this case. Practically speaking, there&rsquo;s an infinitude of ways
  to make selectors more specific by matching on attribute values. The way I see it
  &ndash; and this is just my blind speculation &ndash; Tumblr&rsquo;s motivation
  for choosing to override the rules they have is mostly driven by two practical considerations.</p>


  <p>First, they&rsquo;d like to override older stylesheets that don&rsquo;t take
  the new control style into account. People tend not to apply <code>!important</code>
  to their CSS declarations without a good reason, after all. So they pick the two
  rules that are most likely to be changed by themes, and change those back.</p>


  <p>After that, Tumblr wants to make it difficult enough to override the positioning
  that most developers won&rsquo;t bother to do so, in what I presume are the interests
  of consistency. Hence the very specific selectors. I have to admit that if <a href="http://blog.room208.org/dichotomy">Dichotomy</a>&rsquo;s
  navigation wasn&rsquo;t fixed in the top right corner of the viewport, I probably
  wouldn&rsquo;t even have noticed.</p>


  <p>On the principle of it, though, I think this approach is entirely wrongheaded.
  I&rsquo;d rather Tumblr make things like the controls an explicit part of theme
  customization, and simply encourage designers to take them into account when creating
  themes. The fact that they operate the Theme Garden gives them quite a bit of leverage
  in encouraging themes not to hide the standard controls &ndash; they <a href="http://www.tumblr.com/docs/en/theme_submission_guidelines">already
  do this for other aspects of a theme&rsquo;s design</a>. The &ldquo;my way or the
  highway&rdquo; attitude doesn&rsquo;t work well when, ultimately, you&rsquo;re literally
  giving the user full control over the page&rsquo;s stylesheets.</p>'
asking_name: usgmr
asking_url: http://usgmr.tumblr.com/
blog_name: abandonmentprobability
date: 2014-03-13 21:04:00 GMT
format: markdown
highlighted: []
id: 79488739703
note_count: 0
post_url: http://blog.room208.org/post/79488739703/woah-oneechan-noticed-me-haha-anyway-right
question: 'Woah, oneechan noticed me. haha. Anyway, right! Totally forgot to include
  !important on the post. It sucks how they actually put this into the whole DOM at
  all. I mean display: none !important works alright without the hack bec their display
  attr doesn''t have !important. So does that mean they''re alright with themes hiding
  it but not repositioning it? And I wish on the documentation. It''s not even complete.
  {PermalinkPagination} and {ReblogURL} aren''t even there when they''re so useful.'
reblog: {comment: "<p>It\u2019s arguably impossible for Tumblr to keep someone from\
    \ overriding their CSS, in this case. Practically speaking, there\u2019s an infinitude\
    \ of ways to make selectors more specific by matching on attribute values. The\
    \ way I see it \u2013 and this is just my blind speculation \u2013 Tumblr\u2019\
    s motivation for choosing to override the rules they have is mostly driven by\
    \ two practical considerations.</p>\n\n<p>First, they\u2019d like to override\
    \ older stylesheets that don\u2019t take the new control style into account. People\
    \ tend not to apply <code>!important</code> to their CSS declarations without\
    \ a good reason, after all. So they pick the two rules that are most likely to\
    \ be changed by themes, and change those back.</p>\n\n<p>After that, Tumblr wants\
    \ to make it difficult enough to override the positioning that most developers\
    \ won\u2019t bother to do so, in what I presume are the interests of consistency.\
    \ Hence the very specific selectors. I have to admit that if <a href=\"http://blog.room208.org/dichotomy\"\
    >Dichotomy</a>\u2019s navigation wasn\u2019t fixed in the top right corner of\
    \ the viewport, I probably wouldn\u2019t even have noticed.</p>\n\n<p>On the principle\
    \ of it, though, I think this approach is entirely wrongheaded. I\u2019d rather\
    \ Tumblr make things like the controls an explicit part of theme customization,\
    \ and simply encourage designers to take them into account when creating themes.\
    \ The fact that they operate the Theme Garden gives them quite a bit of leverage\
    \ in encouraging themes not to hide the standard controls \u2013 they <a href=\"\
    http://www.tumblr.com/docs/en/theme_submission_guidelines\">already do this for\
    \ other aspects of a theme\u2019s design</a>. The \u201Cmy way or the highway\u201D\
    \ attitude doesn\u2019t work well when, ultimately, you\u2019re literally giving\
    \ the user full control over the page\u2019s stylesheets.</p>", tree_html: ''}
reblog_key: FrTLEW7C
recommended_color: null
recommended_source: null
short_url: http://tmblr.co/ZnGqcx1A1vUbt
slug: woah-oneechan-noticed-me-haha-anyway-right
state: published
summary: Woah, oneechan noticed me. haha. Anyway, right! Totally forgot to include
  !important on the post. It sucks how they actually put...
tags: [webdev, css, tumblr, followeroutreach]
timestamp: 1394744640
trail:
- blog:
    active: true
    name: abandonmentprobability
    theme: {avatar_shape: square, background_color: '#000000', body_font: Helvetica
        Neue, header_bounds: 0, header_image: 'https://secure.assets.tumblr.com/images/default_header/optica_pattern_08.png?_v=f0f055039bb6136b9661cf2227b535c2',
      header_image_focused: 'https://secure.assets.tumblr.com/images/default_header/optica_pattern_08.png?_v=f0f055039bb6136b9661cf2227b535c2',
      header_image_scaled: 'https://secure.assets.tumblr.com/images/default_header/optica_pattern_08.png?_v=f0f055039bb6136b9661cf2227b535c2',
      header_stretch: true, link_color: '#808080', show_avatar: true, show_description: true,
      show_header_image: false, show_title: true, title_color: '#FFFFFF', title_font: Helvetica
        Neue, title_font_weight: bold}
  content: "<p>It\u2019s arguably impossible for Tumblr to keep someone from overriding\
    \ their CSS, in this case. Practically speaking, there\u2019s an infinitude of\
    \ ways to make selectors more specific by matching on attribute values. The way\
    \ I see it \u2013 and this is just my blind speculation \u2013 Tumblr\u2019s motivation\
    \ for choosing to override the rules they have is mostly driven by two practical\
    \ considerations.</p>\n\n<p>First, they\u2019d like to override older stylesheets\
    \ that don\u2019t take the new control style into account. People tend not to\
    \ apply <code>!important</code> to their CSS declarations without a good reason,\
    \ after all. So they pick the two rules that are most likely to be changed by\
    \ themes, and change those back.</p>\n\n<p>After that, Tumblr wants to make it\
    \ difficult enough to override the positioning that most developers won\u2019\
    t bother to do so, in what I presume are the interests of consistency. Hence the\
    \ very specific selectors. I have to admit that if <a href=\"http://blog.room208.org/dichotomy\"\
    >Dichotomy</a>\u2019s navigation wasn\u2019t fixed in the top right corner of\
    \ the viewport, I probably wouldn\u2019t even have noticed.</p>\n\n<p>On the principle\
    \ of it, though, I think this approach is entirely wrongheaded. I\u2019d rather\
    \ Tumblr make things like the controls an explicit part of theme customization,\
    \ and simply encourage designers to take them into account when creating themes.\
    \ The fact that they operate the Theme Garden gives them quite a bit of leverage\
    \ in encouraging themes not to hide the standard controls \u2013 they <a href=\"\
    http://www.tumblr.com/docs/en/theme_submission_guidelines\">already do this for\
    \ other aspects of a theme\u2019s design</a>. The \u201Cmy way or the highway\u201D\
    \ attitude doesn\u2019t work well when, ultimately, you\u2019re literally giving\
    \ the user full control over the page\u2019s stylesheets.</p>"
  content_raw: "<p>It\u2019s arguably impossible for Tumblr to keep someone from overriding\
    \ their CSS, in this case. Practically speaking, there\u2019s an infinitude of\
    \ ways to make selectors more specific by matching on attribute values. The way\
    \ I see it \u2013 and this is just my blind speculation \u2013 Tumblr\u2019s motivation\
    \ for choosing to override the rules they have is mostly driven by two practical\
    \ considerations.</p>\n\n<p>First, they\u2019d like to override older stylesheets\
    \ that don\u2019t take the new control style into account. People tend not to\
    \ apply <code>!important</code> to their CSS declarations without a good reason,\
    \ after all. So they pick the two rules that are most likely to be changed by\
    \ themes, and change those back.</p>\n\n<p>After that, Tumblr wants to make it\
    \ difficult enough to override the positioning that most developers won\u2019\
    t bother to do so, in what I presume are the interests of consistency. Hence the\
    \ very specific selectors. I have to admit that if <a href=\"http://blog.room208.org/dichotomy\"\
    >Dichotomy</a>\u2019s navigation wasn\u2019t fixed in the top right corner of\
    \ the viewport, I probably wouldn\u2019t even have noticed.</p>\n\n<p>On the principle\
    \ of it, though, I think this approach is entirely wrongheaded. I\u2019d rather\
    \ Tumblr make things like the controls an explicit part of theme customization,\
    \ and simply encourage designers to take them into account when creating themes.\
    \ The fact that they operate the Theme Garden gives them quite a bit of leverage\
    \ in encouraging themes not to hide the standard controls \u2013 they <a href=\"\
    http://www.tumblr.com/docs/en/theme_submission_guidelines\">already do this for\
    \ other aspects of a theme\u2019s design</a>. The \u201Cmy way or the highway\u201D\
    \ attitude doesn\u2019t work well when, ultimately, you\u2019re literally giving\
    \ the user full control over the page\u2019s stylesheets.</p>"
  is_current_item: true
  is_root_item: true
  post: {id: '79488739703'}
type: answer
